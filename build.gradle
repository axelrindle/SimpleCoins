plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.31"
    id "org.jetbrains.kotlin.kapt" version "1.3.31"
}

group = 'de.axelrindle'
version = '0.4'

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://jitpack.io' }
    maven { url "http://nexus.hc.to/content/repositories/pub_releases" }
    maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
}

dependencies {
    // Kotlin stdlib
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.31'

    // APIs
    compileOnly 'org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT'
    compileOnly 'net.milkbowl.vault:VaultAPI:1.7'
    compileOnly 'com.github.axelrindle:PocketKnife:2.0.0'
    compileOnly 'me.clip:placeholderapi:2.10.9'

    // Dependencies
    compile 'io.requery:requery:1.5.1'
    compile 'io.requery:requery-kotlin:1.5.1'
    kapt 'io.requery:requery-processor:1.5.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

processResources {
    filter { String line ->
        line.replaceAll("@VERSION@", project.version.toString())
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task copyToServer(type: Copy) {
    def dir = System.getenv("PLUGINS_DIR")
    if (dir == null) return true

    from("build/libs") {
        include "${project.name}-${project.version}.jar"
    }
    into dir
}

assemble {
    finalizedBy copyToServer
}