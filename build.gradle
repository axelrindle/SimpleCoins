plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.31"
    id "org.jetbrains.kotlin.kapt" version "1.3.31"
    id "jacoco"
}

group = 'de.axelrindle'
version = '0.5'

ext {
    kotlin_version = "1.3.31"
    requery_version = "1.5.1"
    kotest_version = "4.1.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://jitpack.io' }
    maven { url "http://nexus.hc.to/content/repositories/pub_releases" }
    maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
}

dependencies {
    // Kotlin stdlib
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // APIs
    compileOnly 'org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT'
    compileOnly 'net.milkbowl.vault:VaultAPI:1.7'
    compileOnly 'com.github.axelrindle:PocketKnife:2.0.0'
    compileOnly 'me.clip:placeholderapi:2.10.9'

    // Dependencies
    compile "io.requery:requery:$requery_version"
    compile "io.requery:requery-kotlin:$requery_version"
    kapt "io.requery:requery-processor:$requery_version"
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'

    // Testing
    testCompile "junit:junit:4.12"
    testCompile "io.kotest:kotest-runner-junit5-jvm:$kotest_version"
    testCompile "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    testCompile group: "org.slf4j", name: "slf4j-simple", version: "1.7.25"
    testCompile "com.github.seeseemelk:MockBukkit:v1.15-SNAPSHOT"
}

jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

processResources {
    filter { String line ->
        line.replaceAll("@VERSION@", project.version.toString())
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task copyToServer(type: Copy) {
    def dir = System.getenv("PLUGINS_DIR")
    if (dir == null) return true

    from("build/libs") {
        include "${project.name}-${project.version}.jar"
    }
    into dir
}

assemble {
    finalizedBy copyToServer
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = false
    }
}

configurations {
    testCompile.extendsFrom compileOnly
}